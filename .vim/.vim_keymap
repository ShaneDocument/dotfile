" Change leader to space
let mapleader = " "
nnoremap <SPACE> <Nop>

" Hot key for insert mode
:inoremap ( ()<Esc>i
:inoremap {} {}<Esc>i
:inoremap {<CR> {<CR>}<Esc>ko
:inoremap " ""<Esc>i
:inoremap [ []<Esc>i
:inoremap ' ''<Esc>i
" Press Ctrl + s to update the file
:inoremap <silent> <C-s> <Esc>:up<CR>
nmap <silent> <C-s> <Esc>:up<CR>

" Press Ctrl + w to close the file
:inoremap <silent> <C-w> <Esc>:q<CR>
nmap <silent> <C-w> <Esc>:q<CR>

" Set for vim-Clangformat
xnoremap <silent> <C-c> :ClangFormat<CR>

" Set the toggle of highlight
nmap <leader>sh :set hlsearch!<CR>

" Set the toggle of line number
nmap <leader>sn :set nu!<CR>

nnoremap <silent> <leader>sm :call ToggleMouse()<cr>

" Hot key for terminal
nmap <silent> <leader>t- :hor terminal<CR><C-w>w:res +10<CR><C-w>w
nmap <silent> <leader>t/ :vert terminal<CR><C-w>w:vertical res +20<CR><C-w>w

nmap <leader>gp :call VimGrepCurrentFile("normal", "", " %")<left><left><left><left><left><left><left><left>
nmap <silent> <leader>gd :call VimGrepCurrentFile("gd", "", " %")<cr>

" Search the text for current folder
nmap <leader>ap :call VimGrepCurrentFile("normal", "", "**/* %")<left><left><left><left><left><left><left><left><left><left><left><left>
nmap <silent> <leader>ag :call VimGrepCurrentFile("gd", "", "**/* %")<cr>

" ********* QuickFix  *********
nmap <silent> <leader>gc :cclose<cr>
nmap <silent> <leader>go :call EnterQuickFix()<cr>

" Navigate the whole-line highlight in quickfix
" nnoremap <silent> <expr> j &buftype ==# 'quickfix' ? ":call QuickFixMoveHighlight('cnext')<CR>" : "j"
" nnoremap <silent> <expr> k &buftype ==# 'quickfix' ? ":call QuickFixMoveHighlight('cprev')<CR>" : "k"

" window switch - Highlight for quickfix
:nmap <silent> <leader>h :wincmd h<CR>:call QuickFixPatternHighlight()<CR>
:nmap <silent> <leader>l :wincmd l<CR>:call QuickFixPatternHighlight()<CR>
:nmap <silent> <leader>j :wincmd j<CR>:call QuickFixPatternHighlight()<CR>
:nmap <silent> <leader>k :wincmd k<CR>:call QuickFixPatternHighlight()<CR>

augroup QuickfixMappings
    autocmd!
    autocmd FileType qf nnoremap <buffer> <CR> :call OpenQuickfixInNewTabEnter()<CR>
    autocmd FileType qf nnoremap <buffer> <leader>cg :call OpenQuickfixInNewTab()<left>
augroup END

" Tab switch
:nmap <TAB> :tabn<CR>
:nmap <S-TAB> :tabp<CR>


" window create
:nmap <leader>w- :split<CR>
:nmap <leader>w/ :vsplit<CR>

nnoremap <leader>tl :call ToggleTabListChars()<CR>


" Highlighter: Default key mappings: f Enter, f Backspace, f Ctrl+L, f Tab and t Enter
let HiSet   = 'f<CR>'
let HiErase = 'f<BS>'
let HiClear = 'f<C-L>'
let HiFind  = 'f<Tab>'
let HiSetSL = 't<CR>'
