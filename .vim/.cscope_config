" A config about cscope
" TODO: Add the update DB shortcut


" set cscope as ctags. So we can use ctrl+] to go definition and ctrl+T to return.
set cscopetag

" Find the cscope.out to parent recusively
let PATH_CSCOPE_DB = findfile("cscope.out", ".;")
let g:FOLDER_PATH_CSCOPE_DB = fnamemodify(PATH_CSCOPE_DB, ':h')
if filereadable(PATH_CSCOPE_DB)
    execute "cs add " . PATH_CSCOPE_DB
endif

let g:cscope_quickfix = 1

" toggle the cscope quickfix feature
function! CscopeQucikfix()
    if g:cscope_quickfix == 1
        execute "set cscopequickfix="
        let g:cscope_quickfix = 0
    else
        execute "set cscopequickfix=s-,c-,d-,i-,t-,e-,a-,g-,f-"
        let g:cscope_quickfix = 1
    endif
endfunction

function! CscopeFind(type)
    let search_type = a:type
    let search_word = (search_type == "f" || search_type == "i") ? expand("<cfile>") : expand("<cword>")
    " Clean the quickfix
    execute "cexpr []"
    execute "tab cs find " . search_type . " " . search_word
    let quickfix_length = len(getqflist())
    if quickfix_length != 0
        " It will jump to the first result first, so we jump to the original location
        execute "normal! \<C-O>"
        execute "copen"
        if quickfix_length == 1
            call feedkeys("\<CR>")
        endif
    endif
    if quickfix_length == 0
        execute "copen | cclose"
    endif
endfunction

function! CscopeUpdate()
    execute "!cd " . g:FOLDER_PATH_CSCOPE_DB . "; ~/bash_script/build_cscope.sh -u"
endfunction


" cs show: show which cscope database used -> (s)how (w)hich
nmap <leader>sw :cs show<CR>
" cs find t {name}: find the string {name}
nmap <leader>st :call CscopeFind("t")<CR>
" cs find d {name}: find the function called in {name} function
nmap <leader>sd :call CscopeFind("d")<CR>
" cs find g {name}: find the definition of {name}
nmap <leader>sg :call CscopeFind("g")<CR>
" cs find c {name}: find the use of {name}
nmap <leader>sc :call CscopeFind("c")<CR>
" cs find e {name}: faster than egrep
nmap <leader>se :call CscopeFind("e")<CR>
" cs find f {name}: find the file
nmap <leader>sf :call CscopeFind("f")<CR>
" cs find i {name}: find the files include the {name} file
nmap <leader>si :call CscopeFind("i")<CR>
" cs find s {name}: find the symbol of {name}
nmap <leader>ss :call CscopeFind("s")<CR>

" Cscope key mapping
:set cscopequickfix=s-,c-,d-,i-,t-,e-,a-,g-,f-

" Set Syntax highlight for quickfix
autocmd FileType qf setlocal filetype=c

nmap <leader>sq :call CscopeQucikfix()<CR>

nmap <leader>su :call CscopeUpdate()<CR>
